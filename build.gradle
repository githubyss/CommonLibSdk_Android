// 根据配置是否为 launchApp 决定业务组件 module 是作为 library 还是独立 application
boolean isShellApp = project.getName() == shellApp
boolean isLaunchApp = project.getName() == launchApp
if (isLaunchApp) { // 壳 APP 始终以 application 模式运行，其他业务组件以依赖库模式根据配置拔插
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
// apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.alibaba.arouter'

android {
    compileSdkVersion compile_sdk_version.toInteger()
    buildToolsVersion build_tools_version

    resourcePrefix 'comlib_'

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version

        // 根据是否为 launchApp 决定添加 applicationId 和版本号。
        if (isLaunchApp) {
            versionCode 1
            versionName "1.0"
            testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        }

        consumerProguardFiles 'consumer-rules.pro'
    }

    // BuildType，构建类型，主要针对开发生命周期的不同阶段进行配置。
    buildTypes {
        debug {
            debuggable isDebuggable.toBoolean()
            minifyEnabled isMinifyEnabled.toBoolean()
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            debuggable isDebuggable.toBoolean()
            minifyEnabled isMinifyEnabled.toBoolean()
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // // BuildFlavor，构建特征，主要是用以发布给用户不同的应用版本。需要注意的是，这里的版本并非是版本号，而是功能。
    // if (isLaunchApp) {
    //     // 多纬度定义
    //     flavorDimensions 'isPaid', 'nation'
    //     // 多渠道打包配置
    //     productFlavors {
    //         free {
    //             dimension 'isPaid'
    //             applicationId 'com.githubyss.mobile.common.lib.free'
    //             resValue "string", 'appName', '免费版'
    //         }
    //         paid {
    //             dimension 'isPaid'
    //             applicationId 'com.githubyss.mobile.common.lib.paid'
    //             resValue "string", 'appName', '收费版'
    //         }
    //         china {
    //             dimension 'nation'
    //         }
    //         france {
    //             dimension 'nation'
    //         }
    //     }
    // }

    sourceSets {
        // main.java.srcDirs += 'src/main/kotlin'

        // main {
        //     java.srcDirs += 'src/main/kotlin'
        //     test.java.srcDirs += 'src/test/kotlin'
        //     res.srcDirs += [
        //             'src/main/res/common',
        //             'src/main/res/value',
        //     ]
        // }

        main {
            java {
                srcDirs 'src/main/java'
                srcDirs 'src/main/kotlin'
            }
            res {
                srcDirs 'src/main/res'
                srcDirs 'src/main/res/common'
            }
            manifest {
                srcFile 'src/main/AndroidManifest.xml'
            }
            jniLibs {
                srcDirs 'libs'
            }
        }

        if (isLaunchApp) {
            alone {
                java {
                    srcDirs 'src/alone/java'
                    srcDirs 'src/alone/kotlin'
                }
                res {
                    srcDirs 'src/alone/res'
                    srcDirs 'src/alone/res/common'
                }
                manifest {
                    srcFile 'src/alone/AndroidManifest.xml'
                }
            }
        }

        test {
            java {
                srcDirs 'src/test/java'
                srcDirs 'src/test/kotlin'
            }
        }

        sourceSets.all {
            set -> println "${set.name} 的文件是 ${set.java.srcDirs}"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/metadata.kotlin_module'
        exclude 'META-INF/metadata.jvm.kotlin_module'
    }

    // viewBinding {
    //     enabled = isViewBindingEnabled.toBoolean()
    // }

    // dataBinding {
    //     enabled = isDataBindingEnabled.toBoolean()
    // }

    // androidExtensions {
    //     experimental = true
    // }

    // lintOptions {
    //     abortOnError false
    // }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    /* Kotlin */
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    /* Androidx Compatibility */
    api "androidx.appcompat:appcompat:$androidx_appcompat_version"
    api "androidx.core:core-ktx:$androidx_core_ktx_version"
    api "androidx.recyclerview:recyclerview:$androidx_recyclerview_version"
    api "androidx.constraintlayout:constraintlayout:$androidx_constraintlayout_version"
    api "androidx.localbroadcastmanager:localbroadcastmanager:$androidx_localbroadcastmanager_version"
    api "androidx.lifecycle:lifecycle-extensions:$androidx_lifecycle_version"

    /* Material Design Support */
    api "com.google.android.material:material:$material_design_version"

    /* Flexbox */
    api "com.google.android:flexbox:$flexbox_version"

    /* ARouter */
    api "com.alibaba:arouter-api:$arouter_api_version"
    kapt "com.alibaba:arouter-compiler:$arouter_compile_version"

    /* Eventbus */
    api "org.greenrobot:eventbus:$eventbus_version"

    /* RxAndroid */
    // api "io.reactivex:rxandroid:$rxandroid_version"
    api "io.reactivex.rxjava3:rxandroid:$rxandroid3_version"

    /* Joda Time */
    api "joda-time:joda-time:$joda_time_version"

    /* Glide */
    api "com.github.bumptech.glide:glide:$glide_api_version"
    kapt "com.github.bumptech.glide:compiler:$glide_compile_version"

    /* Test */
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_test_espresso_core_version"

    // // 按需加载依赖
    // // 整编时将全部组件添加依赖
    // if (buildAll.toBoolean()) {
    //     for (String name : allComponents.split(",")) {
    //         if (!name.isEmpty()) {
    //             implementation(project(":$name"))
    //         }
    //     }
    // }
    // // 非整编时可以选择组件加入容器 App
    // else {
    //     for (String name : loadComponents.split(",")) {
    //         if (!name.isEmpty()) {
    //             implementation(project(":$name"))
    //         }
    //     }
    // }

    // configurations {
    //     all {
    //         resolutionStrategy.eachDependency { DependencyResolveDetails details ->
    //             def requested = details.requested
    //             if (requested.group == 'androidx.appcompat') {
    //                 if (!requested.name.startsWith('multidex')) {
    //                     details.useVersion '1.2.+'
    //                 }
    //             }
    //         }
    //         exclude module: 'httpclient'
    //     }
    // }
}

kapt {
    arguments {
        arg('moduleName', project.getName())
    }
}
